// <auto-generated />
using System;
using CTS_System6.Data.Migrations;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CTS_System6.Migrations
{
    [DbContext(typeof(TranslatorAppDbContext))]
    partial class TranslatorAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.16")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CTS_System6.Data.Rate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CommunicationScale")
                        .HasColumnType("int");

                    b.Property<int>("DeliveryScale")
                        .HasColumnType("int");

                    b.Property<int>("QualityScale")
                        .HasColumnType("int");

                    b.Property<DateTime>("RateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Rate");
                });

            modelBuilder.Entity("CTS_System6.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<byte[]>("ProfilePictuer")
                        .HasColumnType("varbinary(max)");

                    b.Property<float>("Rate")
                        .HasColumnType("real");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationUser");
                });

            modelBuilder.Entity("CTS_System6.Models.Bids", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<float>("Offer")
                        .HasColumnType("real");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<string>("TranslatorId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("TranslatorId");

                    b.ToTable("Bids");
                });

            modelBuilder.Entity("CTS_System6.Models.Languages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("CTS_System6.Models.Projects", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FromLanguage")
                        .HasColumnType("int");

                    b.Property<float>("Offer")
                        .HasColumnType("real");

                    b.Property<DateTime>("PostDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Subject")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ToLanguage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ToLanguage");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("CTS_System6.Models.TranslatorsLanguages", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FromLanguage")
                        .HasColumnType("int");

                    b.Property<int>("ToLanguage")
                        .HasColumnType("int");

                    b.Property<string>("TranslatorId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ToLanguage");

                    b.HasIndex("TranslatorId");

                    b.ToTable("TranslatorsLanguages");
                });

            modelBuilder.Entity("CTS_System6.Data.Rate", b =>
                {
                    b.HasOne("CTS_System6.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("RateList")
                        .HasForeignKey("UserId");

                    b.Navigation("ApplicationUser");
                });

            modelBuilder.Entity("CTS_System6.Models.Bids", b =>
                {
                    b.HasOne("CTS_System6.Models.Projects", "Projects")
                        .WithMany("BidsList")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CTS_System6.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("BidsList")
                        .HasForeignKey("TranslatorId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("Projects");
                });

            modelBuilder.Entity("CTS_System6.Models.Projects", b =>
                {
                    b.HasOne("CTS_System6.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("ProjectsList")
                        .HasForeignKey("CustomerId");

                    b.HasOne("CTS_System6.Models.Languages", "Languages")
                        .WithMany("ProjectsList")
                        .HasForeignKey("ToLanguage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationUser");

                    b.Navigation("Languages");
                });

            modelBuilder.Entity("CTS_System6.Models.TranslatorsLanguages", b =>
                {
                    b.HasOne("CTS_System6.Models.Languages", "Languages")
                        .WithMany("TranslatorsLanguagesList")
                        .HasForeignKey("ToLanguage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CTS_System6.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("TranslatorLanguagesList")
                        .HasForeignKey("TranslatorId");

                    b.Navigation("ApplicationUser");

                    b.Navigation("Languages");
                });

            modelBuilder.Entity("CTS_System6.Models.ApplicationUser", b =>
                {
                    b.Navigation("BidsList");

                    b.Navigation("ProjectsList");

                    b.Navigation("RateList");

                    b.Navigation("TranslatorLanguagesList");
                });

            modelBuilder.Entity("CTS_System6.Models.Languages", b =>
                {
                    b.Navigation("ProjectsList");

                    b.Navigation("TranslatorsLanguagesList");
                });

            modelBuilder.Entity("CTS_System6.Models.Projects", b =>
                {
                    b.Navigation("BidsList");
                });
#pragma warning restore 612, 618
        }
    }
}
